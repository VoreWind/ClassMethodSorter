<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>647</width>
    <height>728</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <widget class="QWidget" name="centralWidget">
   <layout class="QGridLayout" name="gridLayout">
    <item row="0" column="0">
     <widget class="QComboBox" name="mode_combo">
      <property name="currentIndex">
       <number>2</number>
      </property>
      <item>
       <property name="text">
        <string>Sort</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>Fix header Guards</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>Sort (C)</string>
       </property>
      </item>
     </widget>
    </item>
    <item row="0" column="2">
     <widget class="QLabel" name="label_3">
      <property name="text">
       <string>Mode</string>
      </property>
     </widget>
    </item>
    <item row="4" column="0" colspan="4">
     <widget class="Line" name="line">
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
     </widget>
    </item>
    <item row="5" column="0">
     <widget class="QLabel" name="label">
      <property name="text">
       <string>Source Directory</string>
      </property>
     </widget>
    </item>
    <item row="5" column="3">
     <widget class="QPushButton" name="source_directory_button">
      <property name="text">
       <string>Choose Folder</string>
      </property>
     </widget>
    </item>
    <item row="6" column="0">
     <widget class="QLabel" name="label_2">
      <property name="text">
       <string>Output Directory</string>
      </property>
     </widget>
    </item>
    <item row="6" column="3">
     <widget class="QPushButton" name="destination_directory_button">
      <property name="text">
       <string>Choose Folder</string>
      </property>
     </widget>
    </item>
    <item row="7" column="0">
     <widget class="QCheckBox" name="is_recursive_check">
      <property name="text">
       <string>Recursive</string>
      </property>
     </widget>
    </item>
    <item row="7" column="2">
     <widget class="QPushButton" name="sort_all_button">
      <property name="text">
       <string>Sort All</string>
      </property>
     </widget>
    </item>
    <item row="1" column="0" colspan="4">
     <widget class="QPlainTextEdit" name="segment_text_edit">
      <property name="plainText">
       <string>#ifndef CRL_H
#define CRL_H

#ifndef _XOPEN_SOURCE
#define _XOPEN_SOURCE 700
#endif

#ifndef _BSD_SOURCE
#define _BSD_SOURCE 1
#endif

#ifdef __cplusplus
extern &quot;C&quot; {
#endif

//#include &lt;def.h&gt;
#include &lt;time.h&gt;

#include &quot;trace.h&quot;

/// Структура списка отозванных сертификатов.
typedef struct {
  unsigned char *serial;     // Серийный номер
  unsigned long serial_len;  // Длина серийного номера

  time_t revocdate;           // Дата отзыва
  unsigned long cert_reason;  // Причина отзыва для сертфиката
} rev_cert_t;

/// Структура СОС.
typedef struct {
  unsigned long version;  // Версия

  char *issuer_e;   // Почтовый адрес эмитента
  char *issuer_c;   // Страна эмитента
  char *issuer_l;   // Город эмитента
  char *issuer_o;   // Организация эмитента
  char *issuer_ou;  // Подразделение эмитента
  char *issuer_cn;  // Полное имя эмитента

  time_t thisupdate;  // Дата выпуска
  time_t nextupdate;  // Дата следующего выпуска

  rev_cert_t *rev_certs;  // Список отозванных сертификатов
  unsigned long rev_count;  // Количество сертификатов в списке

  unsigned long long crlNumber;      // Порядковый номер crl
  unsigned long long crlBaseNumber;  // Базовый номер crl

  size_t reasons;

  cert_ext_t *crl_exts;  // Расширения сертификата
  unsigned long ext_count;  // Количество расширений сертификата

  unsigned char *sign;     // Подпись
  unsigned long sign_len;  // Длина подписи

  char *sign_alg_id;  // Алгоритм подписи

} crl_t;

/// \param   *crl_exts структура расширений СОС.
/// \brief   Очищает структуру списка отозванных сертификатов.
void free_crl_ext(cert_ext_t *crl_exts);

/// \param   *rev_cert структура списка отозванных сертификатов.
/// \brief   Очищает структуру списка отозванных сертификатов.
void free_rev_cert(rev_cert_t *rev_cert);

/// \param   *crl структура списка отозванных сертификатов.
/// \brief   Очищает структуру списка отозванных сертификатов.
void free_crl(crl_t *crl);

/// \param   *digital_crl двоичный СОС.
/// \param   digital_crl_size длина СОС.
/// \param   *crl структура разобранного СОС.
/// \return  0 в случае успеха, иначе код ошибки.
/// \brief   Раскодрует СОС и заполняет структуру СОС.
int parse_crl(const unsigned char *digital_crl,
              size_t digital_crl_size,
              crl_t *crl);

/// \param   *digital_crl двоичный СОС.
/// \param   digital_crl_size длина СОС.
/// \param   **signature подпись.
/// \param   *signature_size длина подписи.
/// \param   **crl_verify_blob двоичная часть проверяемого СОС.
/// \param   *crl_verify_blob_size длина части проверяемого СОС.
/// \return  0 в случае успеха, иначе код ошибки.
/// \brief   Получает проверяемую часть и подпис СОС.
int get_tbs_crl(const unsigned char *digial_crl,
                size_t digital_crl_size,
                unsigned char **signature,
                size_t *signature_size,
                unsigned char **crl_verify_blob,
                size_t *crl_verify_blob_size);

/// \param   *digital_cert двоичная часть сертификата.
/// \param   digital_cert_size длина двоичной части сертификата.
/// \param   *crl структура СОС.
/// \param   **tbs_crl_blob двоичная часть СОС.
/// \param   *tbs_crl_blob_size длина двоичной части СОС.
/// \return  0 в случае успеха, иначе код ошибки.
/// \brief   Cоздает подписываемую часть СОС.
int create_tbs_crl(const unsigned char *digital_cert,
                   size_t digital_cert_size,
                   crl_t *crl,
                   unsigned char **tbs_crl_blob,
                   size_t *tbs_crl_blob_size);

/// \param   *digital_cert двоичная часть сертификата.
/// \param   digital_cert_size длина двоичной части сертификата.
/// \param   *crl структура СОС.
/// \param   *signature подпись.
/// \param   signature_size длина подписи.
/// \param   **digital_crl двоичная часть СОС.
/// \param   *digital_crl_size длина двоичной части СОС.
/// \return  0 в случае успеха, иначе код ошибки.
/// \brief   Cоздает СОС с добавлением подписи над TBS базой СОС.
int create_crl(const unsigned char *digital_cert,
               size_t digital_cert_size,
               crl_t *crl,
               unsigned char *signature,
               size_t signature_size,
               unsigned char **digital_crl,
               size_t *digital_crl_size);

/// \param   *ctx контекст для АСН структуры.
/// \param   *digital_cert двоичная часть сертификата.
/// \param   digital_cert_size длина двоичной части сертификата.
/// \param   *crl структура СОС.
/// \return  0 в случае успеха, иначе код ошибки.
/// \brief   Записывает данные в АСН структуру СОС.
int make_tbs_crl(void *ctx_ptr,
                 const unsigned char *digital_cert,
                 size_t digital_cert_size,
                 crl_t *crl);

#ifdef __cplusplus
}  // extern &quot;C&quot;
#endif

#endif  // CRL_H
</string>
      </property>
     </widget>
    </item>
    <item row="5" column="1" colspan="2">
     <widget class="QLineEdit" name="source_directory_line"/>
    </item>
    <item row="6" column="1" colspan="2">
     <widget class="QLineEdit" name="destination_directory_line"/>
    </item>
    <item row="3" column="0" colspan="4">
     <widget class="QPushButton" name="sort_button">
      <property name="text">
       <string>Sort</string>
      </property>
     </widget>
    </item>
    <item row="2" column="3">
     <widget class="QLabel" name="name_label">
      <property name="text">
       <string>File name</string>
      </property>
     </widget>
    </item>
    <item row="2" column="0" colspan="3">
     <widget class="QLineEdit" name="name_line_edit"/>
    </item>
   </layout>
  </widget>
 </widget>
 <layoutdefault spacing="6" margin="11"/>
 <resources/>
 <connections/>
</ui>
